    #fluent forward plugin
    <source>
     @type forward
     port "#{ENV['HEALTHMODEL_REPLICASET_SERVICE_SERVICE_PORT']}"
     bind 0.0.0.0
     chunk_size_limit 4m
    </source>

    #Kubernetes pod inventory
    <source>
     @type kube_podinventory
     tag oneagent.containerInsights.KUBE_POD_INVENTORY_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes Persistent Volume inventory
    <source>
     @type kube_pvinventory
     tag oneagent.containerInsights.KUBE_PV_INVENTORY_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes events
    <source>
     @type kube_events
     tag oneagent.containerInsights.KUBE_EVENTS_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes Nodes
    <source>
     @type kube_nodes
     tag oneagent.containerInsights.KUBE_NODE_INVENTORY_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes health
    <source>
     @type kube_health
     tag kubehealth.ReplicaSet
     run_interval 60
     @log_level debug
    </source>

    #cadvisor perf- Windows nodes
    <source>
     @type win_cadvisor_perf
     tag oneagent.containerInsights.LINUX_PERF_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes object state - deployments
    <source>
     @type kubestate_deployments
     tag oneagent.containerInsights.INSIGHTS_METRICS_BLOB
     run_interval 60
     @log_level debug
    </source>

    #Kubernetes object state - HPA
    <source>
     @type kubestate_hpa
     tag oneagent.containerInsights.INSIGHTS_METRICS_BLOB
     run_interval 60
     @log_level debug
    </source>

    <filter mdm.kubenodeinventory**>
     @type inventory2mdm
     @log_level info
    </filter>

    #custom_metrics_mdm filter plugin for perf data from windows nodes
    <filter mdm.cadvisorperf**>
     @type cadvisor2mdm
     metrics_to_collect cpuUsageNanoCores,memoryWorkingSetBytes,pvUsedBytes
     @log_level info
    </filter>

    #health model aggregation filter
    <filter kubehealth**>
     @type health_model_builder
    </filter>

    #kubepodinventory
    <match **KUBE_POD_INVENTORY_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubepod*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true       
    </match>

    #kubepvinventory    
    <match **KUBE_PV_INVENTORY_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubepv*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true       
    </match>   

    #InsightsMetrics
    #kubestate
    <match **INSIGHTS_METRICS_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/insightsmetrics*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true       
    </match>

    #kubeevents
    <match **KUBE_EVENTS_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubeevents*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true
    </match>
    
    #kubeservices
    <match **KUBE_SERVICES_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubeservices*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 2   
     </buffer>
     keepalive true     
    </match> 

    #kubenodeinventory
    <match **KUBE_NODE_INVENTORY_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubenode*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true     
    </match>

    #containernodeinventory
    <match **CONTAINER_NODE_INVENTORY_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/containernodeinventory*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 3   
     </buffer>
     keepalive true      
    </match>

    #containerinventory for windows containers
    <match **CONTAINER_INVENTORY_BLOB**>
      @type forward
      @log_level debug
      send_timeout 30
      connect_timeout 30
      heartbeat_type none
      <server>
        host 0.0.0.0
        port "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
      </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/containerinventory*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true
    </match>  

    #perf   
    <match **LINUX_PERF_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/perf*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true     
    </match>

    <match mdm.kubepodinventory** mdm.kubenodeinventory** >
     @type mdm
     @log_level debug    
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/out_mdm_*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     retry_mdm_post_wait_minutes 30
    </match>

    <match mdm.cadvisorperf**>
     @type mdm
     @log_level debug
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/out_mdm_cdvisorperf*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     retry_mdm_post_wait_minutes 30
    </match>
 
    #kubehealth
    <match **KUBE_HEALTH_BLOB**>
     @type forward
     @log_level debug
     send_timeout 30
     connect_timeout 30
     heartbeat_type none
     <server>
       host 0.0.0.0
       port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
     </server>
     <buffer>
      @type file
      path /var/opt/microsoft/docker-cimprov/state/kubehealth*.buffer
      overflow_action drop_oldest_chunk
      chunk_limit_size 4m
      queue_limit_length 20
      flush_interval 20s
      retry_max_times 10
      retry_wait 5s
      retry_max_interval 5m
      flush_thread_count 5   
     </buffer>
     keepalive true     
    </match>
